// url          = env("DATABASE_URL")

datasource db {
  provider     = "sqlite"
  url          = "file:./dev.db?mode=memory&cache=shared"
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       String @id @default(uuid())
  email    String @unique
  password String
}

model Company {
  logoUrl String?
  name    String     @id @unique
  offers  JobOffer[]
}

model PositionLevel {
  id        String     @id @default(uuid())
  value     String     @unique
  jobOffers JobOffer[] @relation("PositionLevels")
}

model ContractType {
  id        String     @id @default(uuid())
  value     String     @unique
  jobOffers JobOffer[] @relation("ContractTypes")
}

model WorkMode {
  id        String     @id @default(uuid())
  value     String     @unique
  jobOffers JobOffer[] @relation("WorkModes")
}

model WorkSchedule {
  id        String     @id @default(uuid())
  value     String     @unique
  jobOffers JobOffer[] @relation("WorkSchedules")
}

model Technology {
  id        String     @id @default(uuid())
  value     String     @unique
  jobOffers JobOffer[] @relation("Technologies")
}

model OfferUrl {
  id         String   @id @default(uuid())
  value      String
  jobOfferId String
  jobOffer   JobOffer @relation("OfferUrls", fields: [jobOfferId], references: [id], onDelete: Cascade)

  @@index([jobOfferId])
}

model Workplace {
  id        String     @id @default(uuid())
  value     String     @unique
  jobOffers JobOffer[] @relation("Workplaces")

  @@index([value])
}

model SalaryRange {
  id         String   @id @default(uuid())
  min        Int      @default(0)
  max        Int      @default(0)
  currency   String   @default("pln")
  type       String   @default("brutto")
  timeUnit   String   @default("month")
  jobOfferId String
  jobOffer   JobOffer @relation(fields: [jobOfferId], references: [id], onDelete: Cascade)

  @@index([jobOfferId])
}

model JobOffer {
  id             String          @id @default(uuid())
  slug           String
  positionName   String
  dataSourceCode String?
  description    String?
  createdAt      DateTime?       @default(now())
  updatedAt      DateTime?       @default(now()) @updatedAt
  expirationDate DateTime?       @default(now())
  companyName    String?
  company        Company?        @relation(fields: [companyName], references: [name])
  salaryRange    SalaryRange[]
  positionLevels PositionLevel[] @relation("PositionLevels")
  contractTypes  ContractType[]  @relation("ContractTypes")
  workModes      WorkMode[]      @relation("WorkModes")
  workSchedules  WorkSchedule[]  @relation("WorkSchedules")
  technologies   Technology[]    @relation("Technologies")
  workplaces     Workplace[]     @relation("Workplaces")
  offerUrls      OfferUrl[]      @relation("OfferUrls")

  @@index([companyName])
}

model OffersMetadata {
  id        String   @id @default("offers-metadata")
  updatedAt DateTime @updatedAt
  total     Int      @default(0)
}
